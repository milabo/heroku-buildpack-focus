#!/usr/bin/env bash

# Fail fast and fail hard
set -eo pipefail

# Syntax sugar
main_indent() {
    echo "       [+focus] $*"
}

# Initlialize
main_indent "initlialize"
BIN_DIR=$(cd $(dirname $0); pwd)  # absolute path
BUILD_DIR=$1                      # /tmp/build_#HASH#
INSTALL_DIR=$HOME/.vendor         # /app/.vendor
LIB_DIR=$BIN_DIR/lib              # $BIN_DIR/lib
CACHE_DIR=$2                      # /app/tmp/cache
PROFILE_DIR=$BUILD_DIR/.profile.d # $BUILD_DIR/.profile.d
mkdir -p $INSTALL_DIR
mkdir -p $CACHE_DIR
mkdir -p $PROFILE_DIR

# Build libraries
main_indent "build step by step"
. $BIN_DIR/steps/compile-mecab       $BUILD_DIR $LIB_DIR $INSTALL_DIR $CACHE_DIR $PROFILE_DIR # mecab buildpack
. $BIN_DIR/steps/compile-tesseract   $BUILD_DIR $LIB_DIR $INSTALL_DIR $CACHE_DIR $PROFILE_DIR # tesseract buildpack
. $BIN_DIR/steps/compile-opencv      $BUILD_DIR $LIB_DIR $INSTALL_DIR $CACHE_DIR $PROFILE_DIR # opencv buildpack
. $BIN_DIR/steps/compile-imagemagick $BUILD_DIR $LIB_DIR $INSTALL_DIR $CACHE_DIR $PROFILE_DIR # imagemagick buildpack

# Remove unnecessary files
main_indent "remove unnecessary files"
cd $HOME/.vendor
find . -name "*.a" -exec rm {} \;
find . -name "*.h" -exec rm {} \;
find . -name "*.c" -exec rm {} \;
find . -name "*.hpp" -exec rm {} \;
find . -name "*.cpp" -exec rm {} \;

# Store binaries
(cd $HOME && tar cf - .vendor) | (cd $BUILD_DIR && tar xf -)

main_indent "build finished"